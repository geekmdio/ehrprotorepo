// Code generated by protoc-gen-go. DO NOT EDIT.
// source: note.proto

package ehrpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FragmentTopic int32

const (
	FragmentTopic_NO_TOPIC        FragmentTopic = 0
	FragmentTopic_SUBJECTIVE      FragmentTopic = 1
	FragmentTopic_MEDICAL_HISTORY FragmentTopic = 2
	FragmentTopic_ALLERGIES       FragmentTopic = 3
	FragmentTopic_MEDICATIONS     FragmentTopic = 4
	FragmentTopic_FAMILY_HISTORY  FragmentTopic = 5
	FragmentTopic_SOCIAL_HISTORY  FragmentTopic = 6
	FragmentTopic_VITALS          FragmentTopic = 7
	FragmentTopic_PHYSICAL_EXAM   FragmentTopic = 8
	FragmentTopic_MEDICAL_PROBLEM FragmentTopic = 9
)

var FragmentTopic_name = map[int32]string{
	0: "NO_TOPIC",
	1: "SUBJECTIVE",
	2: "MEDICAL_HISTORY",
	3: "ALLERGIES",
	4: "MEDICATIONS",
	5: "FAMILY_HISTORY",
	6: "SOCIAL_HISTORY",
	7: "VITALS",
	8: "PHYSICAL_EXAM",
	9: "MEDICAL_PROBLEM",
}
var FragmentTopic_value = map[string]int32{
	"NO_TOPIC":        0,
	"SUBJECTIVE":      1,
	"MEDICAL_HISTORY": 2,
	"ALLERGIES":       3,
	"MEDICATIONS":     4,
	"FAMILY_HISTORY":  5,
	"SOCIAL_HISTORY":  6,
	"VITALS":          7,
	"PHYSICAL_EXAM":   8,
	"MEDICAL_PROBLEM": 9,
}

func (x FragmentTopic) String() string {
	return proto.EnumName(FragmentTopic_name, int32(x))
}
func (FragmentTopic) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_note_4a9eca399b1da5fa, []int{0}
}

type FragmentPriority int32

const (
	FragmentPriority_NO_PRIORITY FragmentPriority = 0
	FragmentPriority_HIGH        FragmentPriority = 1
	FragmentPriority_NORMAL      FragmentPriority = 2
	FragmentPriority_LOW         FragmentPriority = 3
)

var FragmentPriority_name = map[int32]string{
	0: "NO_PRIORITY",
	1: "HIGH",
	2: "NORMAL",
	3: "LOW",
}
var FragmentPriority_value = map[string]int32{
	"NO_PRIORITY": 0,
	"HIGH":        1,
	"NORMAL":      2,
	"LOW":         3,
}

func (x FragmentPriority) String() string {
	return proto.EnumName(FragmentPriority_name, int32(x))
}
func (FragmentPriority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_note_4a9eca399b1da5fa, []int{1}
}

type NoteFragmentStatus int32

const (
	NoteFragmentStatus_NO_STATUS  NoteFragmentStatus = 0
	NoteFragmentStatus_INCOMPLETE NoteFragmentStatus = 1
	NoteFragmentStatus_ACTIVE     NoteFragmentStatus = 2
	NoteFragmentStatus_REPLACED   NoteFragmentStatus = 3
)

var NoteFragmentStatus_name = map[int32]string{
	0: "NO_STATUS",
	1: "INCOMPLETE",
	2: "ACTIVE",
	3: "REPLACED",
}
var NoteFragmentStatus_value = map[string]int32{
	"NO_STATUS":  0,
	"INCOMPLETE": 1,
	"ACTIVE":     2,
	"REPLACED":   3,
}

func (x NoteFragmentStatus) String() string {
	return proto.EnumName(NoteFragmentStatus_name, int32(x))
}
func (NoteFragmentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_note_4a9eca399b1da5fa, []int{2}
}

type NoteType int32

const (
	NoteType_NO_NOTE_TYPE                 NoteType = 0
	NoteType_FOLLOW_UP                    NoteType = 1
	NoteType_PHONE_CALL                   NoteType = 2
	NoteType_CONTINUED_CARE_DOCUMENTATION NoteType = 4
	NoteType_REFILL_DOCUMENTATION         NoteType = 5
	NoteType_INTAKE                       NoteType = 6
	NoteType_PROCEDURE                    NoteType = 7
	NoteType_HISTORY_AND_PHYSICAL         NoteType = 8
)

var NoteType_name = map[int32]string{
	0: "NO_NOTE_TYPE",
	1: "FOLLOW_UP",
	2: "PHONE_CALL",
	4: "CONTINUED_CARE_DOCUMENTATION",
	5: "REFILL_DOCUMENTATION",
	6: "INTAKE",
	7: "PROCEDURE",
	8: "HISTORY_AND_PHYSICAL",
}
var NoteType_value = map[string]int32{
	"NO_NOTE_TYPE":                 0,
	"FOLLOW_UP":                    1,
	"PHONE_CALL":                   2,
	"CONTINUED_CARE_DOCUMENTATION": 4,
	"REFILL_DOCUMENTATION":         5,
	"INTAKE":                       6,
	"PROCEDURE":                    7,
	"HISTORY_AND_PHYSICAL":         8,
}

func (x NoteType) String() string {
	return proto.EnumName(NoteType_name, int32(x))
}
func (NoteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_note_4a9eca399b1da5fa, []int{3}
}

type Note struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DateCreated          *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	NoteGuid             string               `protobuf:"bytes,3,opt,name=note_guid,json=noteGuid,proto3" json:"note_guid,omitempty"`
	VisitGuid            string               `protobuf:"bytes,4,opt,name=visit_guid,json=visitGuid,proto3" json:"visit_guid,omitempty"`
	AuthorGuid           string               `protobuf:"bytes,5,opt,name=author_guid,json=authorGuid,proto3" json:"author_guid,omitempty"`
	PatientGuid          string               `protobuf:"bytes,6,opt,name=patient_guid,json=patientGuid,proto3" json:"patient_guid,omitempty"`
	Type                 NoteType             `protobuf:"varint,7,opt,name=type,proto3,enum=ehr.note.NoteType" json:"type,omitempty"`
	Fragments            []*NoteFragment      `protobuf:"bytes,8,rep,name=fragments,proto3" json:"fragments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Note) Reset()         { *m = Note{} }
func (m *Note) String() string { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()    {}
func (*Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_note_4a9eca399b1da5fa, []int{0}
}
func (m *Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Note.Unmarshal(m, b)
}
func (m *Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Note.Marshal(b, m, deterministic)
}
func (dst *Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Note.Merge(dst, src)
}
func (m *Note) XXX_Size() int {
	return xxx_messageInfo_Note.Size(m)
}
func (m *Note) XXX_DiscardUnknown() {
	xxx_messageInfo_Note.DiscardUnknown(m)
}

var xxx_messageInfo_Note proto.InternalMessageInfo

func (m *Note) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Note) GetDateCreated() *timestamp.Timestamp {
	if m != nil {
		return m.DateCreated
	}
	return nil
}

func (m *Note) GetNoteGuid() string {
	if m != nil {
		return m.NoteGuid
	}
	return ""
}

func (m *Note) GetVisitGuid() string {
	if m != nil {
		return m.VisitGuid
	}
	return ""
}

func (m *Note) GetAuthorGuid() string {
	if m != nil {
		return m.AuthorGuid
	}
	return ""
}

func (m *Note) GetPatientGuid() string {
	if m != nil {
		return m.PatientGuid
	}
	return ""
}

func (m *Note) GetType() NoteType {
	if m != nil {
		return m.Type
	}
	return NoteType_NO_NOTE_TYPE
}

func (m *Note) GetFragments() []*NoteFragment {
	if m != nil {
		return m.Fragments
	}
	return nil
}

type NoteFragment struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DateCreated          *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	NoteFragmentGuid     string               `protobuf:"bytes,3,opt,name=note_fragment_guid,json=noteFragmentGuid,proto3" json:"note_fragment_guid,omitempty"`
	NoteGuid             string               `protobuf:"bytes,4,opt,name=note_guid,json=noteGuid,proto3" json:"note_guid,omitempty"`
	Issue                MedicalIssue         `protobuf:"varint,8,opt,name=issue,proto3,enum=ehr.medicalissues.MedicalIssue" json:"issue,omitempty"`
	Icd_10Code           string               `protobuf:"bytes,9,opt,name=icd_10_code,json=icd10Code,proto3" json:"icd_10_code,omitempty"`
	Status               NoteFragmentStatus   `protobuf:"varint,10,opt,name=status,proto3,enum=ehr.note.NoteFragmentStatus" json:"status,omitempty"`
	Priority             FragmentPriority     `protobuf:"varint,11,opt,name=priority,proto3,enum=ehr.note.FragmentPriority" json:"priority,omitempty"`
	Topic                FragmentTopic        `protobuf:"varint,12,opt,name=topic,proto3,enum=ehr.note.FragmentTopic" json:"topic,omitempty"`
	MarkdownContent      string               `protobuf:"bytes,13,opt,name=markdown_content,json=markdownContent,proto3" json:"markdown_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NoteFragment) Reset()         { *m = NoteFragment{} }
func (m *NoteFragment) String() string { return proto.CompactTextString(m) }
func (*NoteFragment) ProtoMessage()    {}
func (*NoteFragment) Descriptor() ([]byte, []int) {
	return fileDescriptor_note_4a9eca399b1da5fa, []int{1}
}
func (m *NoteFragment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoteFragment.Unmarshal(m, b)
}
func (m *NoteFragment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoteFragment.Marshal(b, m, deterministic)
}
func (dst *NoteFragment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoteFragment.Merge(dst, src)
}
func (m *NoteFragment) XXX_Size() int {
	return xxx_messageInfo_NoteFragment.Size(m)
}
func (m *NoteFragment) XXX_DiscardUnknown() {
	xxx_messageInfo_NoteFragment.DiscardUnknown(m)
}

var xxx_messageInfo_NoteFragment proto.InternalMessageInfo

func (m *NoteFragment) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NoteFragment) GetDateCreated() *timestamp.Timestamp {
	if m != nil {
		return m.DateCreated
	}
	return nil
}

func (m *NoteFragment) GetNoteFragmentGuid() string {
	if m != nil {
		return m.NoteFragmentGuid
	}
	return ""
}

func (m *NoteFragment) GetNoteGuid() string {
	if m != nil {
		return m.NoteGuid
	}
	return ""
}

func (m *NoteFragment) GetIssue() MedicalIssue {
	if m != nil {
		return m.Issue
	}
	return MedicalIssue_NO_MEDICAL_ISSUE
}

func (m *NoteFragment) GetIcd_10Code() string {
	if m != nil {
		return m.Icd_10Code
	}
	return ""
}

func (m *NoteFragment) GetStatus() NoteFragmentStatus {
	if m != nil {
		return m.Status
	}
	return NoteFragmentStatus_NO_STATUS
}

func (m *NoteFragment) GetPriority() FragmentPriority {
	if m != nil {
		return m.Priority
	}
	return FragmentPriority_NO_PRIORITY
}

func (m *NoteFragment) GetTopic() FragmentTopic {
	if m != nil {
		return m.Topic
	}
	return FragmentTopic_NO_TOPIC
}

func (m *NoteFragment) GetMarkdownContent() string {
	if m != nil {
		return m.MarkdownContent
	}
	return ""
}

func init() {
	proto.RegisterType((*Note)(nil), "ehr.note.Note")
	proto.RegisterType((*NoteFragment)(nil), "ehr.note.NoteFragment")
	proto.RegisterEnum("ehr.note.FragmentTopic", FragmentTopic_name, FragmentTopic_value)
	proto.RegisterEnum("ehr.note.FragmentPriority", FragmentPriority_name, FragmentPriority_value)
	proto.RegisterEnum("ehr.note.NoteFragmentStatus", NoteFragmentStatus_name, NoteFragmentStatus_value)
	proto.RegisterEnum("ehr.note.NoteType", NoteType_name, NoteType_value)
}

func init() { proto.RegisterFile("note.proto", fileDescriptor_note_4a9eca399b1da5fa) }

var fileDescriptor_note_4a9eca399b1da5fa = []byte{
	// 774 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xcf, 0x73, 0xe3, 0x34,
	0x14, 0xc7, 0xeb, 0xfc, 0x74, 0x5e, 0xd2, 0x56, 0x68, 0x19, 0xf0, 0x94, 0x85, 0x86, 0x3d, 0x30,
	0xa1, 0x03, 0xd9, 0xdd, 0xf2, 0xe3, 0xc6, 0xc1, 0x75, 0xd4, 0x46, 0xe0, 0x58, 0x1e, 0x59, 0xd9,
	0x25, 0x5c, 0x34, 0x6e, 0xac, 0x6d, 0x3d, 0x6c, 0xe2, 0x8c, 0xa3, 0xc0, 0xf4, 0x7f, 0xe2, 0xc6,
	0x9d, 0x2b, 0xff, 0x16, 0x23, 0x39, 0xd9, 0x4d, 0x5b, 0x8e, 0x7b, 0xd4, 0xfb, 0x7e, 0xdf, 0xfb,
	0xea, 0x7d, 0x64, 0x03, 0x2c, 0x0b, 0xad, 0x86, 0xab, 0xb2, 0xd0, 0x05, 0x76, 0xd5, 0x6d, 0x39,
	0x34, 0xe7, 0x93, 0xd3, 0x9b, 0xa2, 0xb8, 0x79, 0xab, 0x9e, 0xdb, 0xfa, 0xf5, 0xe6, 0xcd, 0x73,
	0x9d, 0x2f, 0xd4, 0x5a, 0xa7, 0x8b, 0x55, 0x65, 0x3d, 0x79, 0xb2, 0x50, 0x59, 0x3e, 0x4f, 0xdf,
	0xe6, 0xeb, 0xf5, 0x46, 0xad, 0xab, 0xe2, 0xb3, 0xbf, 0x6b, 0xd0, 0x88, 0x0a, 0xad, 0xf0, 0x11,
	0xd4, 0xf2, 0xcc, 0x73, 0xfa, 0xce, 0xa0, 0xc9, 0x6b, 0x79, 0x86, 0x7f, 0x82, 0x5e, 0x96, 0x6a,
	0x25, 0xe7, 0xa5, 0x4a, 0xb5, 0xca, 0xbc, 0x5a, 0xdf, 0x19, 0x74, 0xcf, 0x4f, 0x86, 0x55, 0xca,
	0x70, 0x97, 0x32, 0x14, 0xbb, 0x14, 0xde, 0x35, 0xfe, 0xa0, 0xb2, 0xe3, 0xcf, 0xa0, 0x63, 0x6e,
	0x25, 0x6f, 0x36, 0x79, 0xe6, 0xd5, 0xfb, 0xce, 0xa0, 0xc3, 0x5d, 0x53, 0xb8, 0xda, 0xe4, 0x19,
	0xfe, 0x1c, 0xe0, 0x8f, 0x7c, 0x9d, 0xeb, 0x4a, 0x6d, 0x58, 0xb5, 0x63, 0x2b, 0x56, 0x3e, 0x85,
	0x6e, 0xba, 0xd1, 0xb7, 0x45, 0x59, 0xe9, 0x4d, 0xab, 0x43, 0x55, 0xb2, 0x86, 0x2f, 0xa1, 0xb7,
	0x4a, 0x75, 0xae, 0x96, 0xdb, 0x09, 0x2d, 0xeb, 0xe8, 0x6e, 0x6b, 0xd6, 0xf2, 0x15, 0x34, 0xf4,
	0xdd, 0x4a, 0x79, 0xed, 0xbe, 0x33, 0x38, 0x3a, 0xc7, 0xc3, 0x1d, 0xa6, 0xa1, 0x59, 0x56, 0xdc,
	0xad, 0x14, 0xb7, 0x3a, 0xfe, 0x1e, 0x3a, 0x6f, 0xca, 0xf4, 0x66, 0xa1, 0x96, 0x7a, 0xed, 0xb9,
	0xfd, 0xfa, 0xa0, 0x7b, 0xfe, 0xc9, 0x7d, 0xf3, 0xe5, 0x56, 0xe6, 0xef, 0x8d, 0xcf, 0xfe, 0xad,
	0x43, 0x6f, 0x5f, 0xfb, 0xd0, 0xf4, 0xbe, 0x01, 0x6c, 0xe9, 0xed, 0x12, 0xf7, 0x31, 0xa2, 0xe5,
	0x5e, 0xb0, 0xdd, 0xf5, 0x1e, 0xeb, 0xc6, 0x03, 0xd6, 0x3f, 0x40, 0xd3, 0x3e, 0xb8, 0xe7, 0x5a,
	0x12, 0xa7, 0x76, 0xb9, 0xfb, 0x5f, 0xc2, 0xa4, 0x3a, 0x51, 0x73, 0xe2, 0x95, 0x1b, 0x7f, 0x01,
	0xdd, 0x7c, 0x9e, 0xc9, 0x97, 0x2f, 0xe4, 0xbc, 0xc8, 0x94, 0xd7, 0xa9, 0xde, 0x28, 0x9f, 0x67,
	0x2f, 0x5f, 0x04, 0x45, 0x66, 0xb8, 0xb5, 0xd6, 0x3a, 0xd5, 0x9b, 0xb5, 0x07, 0x76, 0xee, 0xd3,
	0xff, 0x87, 0x96, 0x58, 0x0f, 0xdf, 0x7a, 0xf1, 0x8f, 0xe0, 0xae, 0xca, 0xbc, 0x28, 0x73, 0x7d,
	0xe7, 0x75, 0x6d, 0xdf, 0xc9, 0xfb, 0xbe, 0x5d, 0x4f, 0xbc, 0x75, 0xf0, 0x77, 0x5e, 0xfc, 0x2d,
	0x34, 0x75, 0xb1, 0xca, 0xe7, 0x5e, 0xcf, 0x36, 0x7d, 0xfa, 0xb8, 0x49, 0x18, 0x99, 0x57, 0x2e,
	0xfc, 0x35, 0xa0, 0x45, 0x5a, 0xfe, 0x9e, 0x15, 0x7f, 0x2e, 0xe5, 0xbc, 0x58, 0x6a, 0xb5, 0xd4,
	0xde, 0xa1, 0xdd, 0xe0, 0x78, 0x57, 0x0f, 0xaa, 0xf2, 0xd9, 0x3f, 0x0e, 0x1c, 0xde, 0x9b, 0x81,
	0x7b, 0xe0, 0x46, 0x4c, 0x0a, 0x16, 0xd3, 0x00, 0x1d, 0xe0, 0x23, 0x80, 0x64, 0x7a, 0xf1, 0x33,
	0x09, 0x04, 0x7d, 0x45, 0x90, 0x83, 0x9f, 0xc0, 0xf1, 0x84, 0x8c, 0x68, 0xe0, 0x87, 0x72, 0x4c,
	0x13, 0xc1, 0xf8, 0x0c, 0xd5, 0xf0, 0x21, 0x74, 0xfc, 0x30, 0x24, 0xfc, 0x8a, 0x92, 0x04, 0xd5,
	0xf1, 0x31, 0x74, 0x2b, 0x8f, 0xa0, 0x2c, 0x4a, 0x50, 0x03, 0x63, 0x38, 0xba, 0xf4, 0x27, 0x34,
	0x9c, 0xbd, 0xeb, 0x69, 0x9a, 0x5a, 0xc2, 0x02, 0xba, 0x37, 0xa7, 0x85, 0x01, 0x5a, 0xaf, 0xa8,
	0xf0, 0xc3, 0x04, 0xb5, 0xf1, 0x47, 0x70, 0x18, 0x8f, 0x67, 0x89, 0x4d, 0x22, 0xbf, 0xfa, 0x13,
	0xe4, 0xee, 0x67, 0xc7, 0x9c, 0x5d, 0x84, 0x64, 0x82, 0x3a, 0x67, 0x17, 0x80, 0x1e, 0x82, 0x33,
	0x17, 0x88, 0x98, 0x8c, 0x39, 0x65, 0x9c, 0x8a, 0x19, 0x3a, 0xc0, 0x2e, 0x34, 0xc6, 0xf4, 0x6a,
	0x8c, 0x1c, 0x13, 0x11, 0x31, 0x3e, 0xf1, 0x43, 0x54, 0xc3, 0x6d, 0xa8, 0x87, 0xec, 0x35, 0xaa,
	0x9f, 0x4d, 0x00, 0x3f, 0x7e, 0x34, 0xb3, 0x55, 0xc4, 0x64, 0x22, 0x7c, 0x31, 0x4d, 0x2a, 0x12,
	0x34, 0x0a, 0xd8, 0x24, 0x0e, 0x89, 0x20, 0xd5, 0x24, 0xbf, 0xa2, 0x52, 0x33, 0xcc, 0x38, 0x89,
	0x43, 0x3f, 0x20, 0x23, 0x54, 0x3f, 0xfb, 0xcb, 0x01, 0x77, 0xf7, 0x9b, 0x61, 0x04, 0xbd, 0x88,
	0xc9, 0x88, 0x09, 0x22, 0xc5, 0x2c, 0x26, 0xe8, 0xc0, 0xcc, 0xbd, 0x64, 0x61, 0xc8, 0x5e, 0xcb,
	0x69, 0x8c, 0x1c, 0x33, 0x37, 0x1e, 0xb3, 0x88, 0xc8, 0xc0, 0x0f, 0xcd, 0xad, 0xfa, 0xf0, 0x34,
	0x60, 0x91, 0xa0, 0xd1, 0x94, 0x8c, 0x64, 0xe0, 0x73, 0x22, 0x47, 0x2c, 0x98, 0x4e, 0x48, 0x24,
	0x2c, 0x4f, 0xd4, 0xc0, 0x1e, 0x7c, 0xcc, 0xc9, 0x25, 0x0d, 0xc3, 0x07, 0x4a, 0xd3, 0xdc, 0x89,
	0x46, 0xc2, 0xff, 0x85, 0xa0, 0x96, 0x89, 0x89, 0x39, 0x0b, 0xc8, 0x68, 0xca, 0x09, 0x6a, 0x9b,
	0xa6, 0x2d, 0x68, 0xe9, 0x47, 0x23, 0xb9, 0x63, 0x8b, 0xdc, 0x8b, 0xf6, 0x6f, 0x4d, 0x75, 0x5b,
	0xae, 0xae, 0xaf, 0x5b, 0xf6, 0xb7, 0xfc, 0xee, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x1e,
	0x66, 0x93, 0x60, 0x05, 0x00, 0x00,
}
