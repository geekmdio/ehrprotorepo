/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.ehr.note.NoteFragment');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.google.protobuf.Timestamp');

goog.forwardDeclare('proto.ehr.note.FragmentPriority');
goog.forwardDeclare('proto.ehr.note.FragmentTopic');
goog.forwardDeclare('proto.ehr.note.NoteFragmentStatus');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ehr.note.NoteFragment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ehr.note.NoteFragment.repeatedFields_, null);
};
goog.inherits(proto.ehr.note.NoteFragment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ehr.note.NoteFragment.displayName = 'proto.ehr.note.NoteFragment';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ehr.note.NoteFragment.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ehr.note.NoteFragment.prototype.toObject = function(opt_includeInstance) {
  return proto.ehr.note.NoteFragment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ehr.note.NoteFragment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ehr.note.NoteFragment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dateCreated: (f = msg.getDateCreated()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    noteFragmentGuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    noteGuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    issueGuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    icd10Code: jspb.Message.getFieldWithDefault(msg, 6, ""),
    icd10Long: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0),
    priority: jspb.Message.getFieldWithDefault(msg, 10, 0),
    topic: jspb.Message.getFieldWithDefault(msg, 11, 0),
    markdownContent: jspb.Message.getFieldWithDefault(msg, 12, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 13)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ehr.note.NoteFragment}
 */
proto.ehr.note.NoteFragment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ehr.note.NoteFragment;
  return proto.ehr.note.NoteFragment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ehr.note.NoteFragment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ehr.note.NoteFragment}
 */
proto.ehr.note.NoteFragment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setDateCreated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNoteFragmentGuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNoteGuid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssueGuid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcd10Code(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcd10Long(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {!proto.ehr.note.NoteFragmentStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {!proto.ehr.note.FragmentPriority} */ (reader.readEnum());
      msg.setPriority(value);
      break;
    case 11:
      var value = /** @type {!proto.ehr.note.FragmentTopic} */ (reader.readEnum());
      msg.setTopic(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarkdownContent(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ehr.note.NoteFragment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ehr.note.NoteFragment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ehr.note.NoteFragment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ehr.note.NoteFragment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDateCreated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNoteFragmentGuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNoteGuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIssueGuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIcd10Code();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIcd10Long();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getTopic();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getMarkdownContent();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.ehr.note.NoteFragment.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ehr.note.NoteFragment.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp date_created = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ehr.note.NoteFragment.prototype.getDateCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.ehr.note.NoteFragment.prototype.setDateCreated = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ehr.note.NoteFragment.prototype.clearDateCreated = function() {
  this.setDateCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ehr.note.NoteFragment.prototype.hasDateCreated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string note_fragment_guid = 3;
 * @return {string}
 */
proto.ehr.note.NoteFragment.prototype.getNoteFragmentGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ehr.note.NoteFragment.prototype.setNoteFragmentGuid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string note_guid = 4;
 * @return {string}
 */
proto.ehr.note.NoteFragment.prototype.getNoteGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ehr.note.NoteFragment.prototype.setNoteGuid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string issue_guid = 5;
 * @return {string}
 */
proto.ehr.note.NoteFragment.prototype.getIssueGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ehr.note.NoteFragment.prototype.setIssueGuid = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string icd_10_code = 6;
 * @return {string}
 */
proto.ehr.note.NoteFragment.prototype.getIcd10Code = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.ehr.note.NoteFragment.prototype.setIcd10Code = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string icd_10_long = 7;
 * @return {string}
 */
proto.ehr.note.NoteFragment.prototype.getIcd10Long = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.ehr.note.NoteFragment.prototype.setIcd10Long = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.ehr.note.NoteFragment.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.ehr.note.NoteFragment.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional NoteFragmentStatus status = 9;
 * @return {!proto.ehr.note.NoteFragmentStatus}
 */
proto.ehr.note.NoteFragment.prototype.getStatus = function() {
  return /** @type {!proto.ehr.note.NoteFragmentStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {!proto.ehr.note.NoteFragmentStatus} value */
proto.ehr.note.NoteFragment.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional FragmentPriority priority = 10;
 * @return {!proto.ehr.note.FragmentPriority}
 */
proto.ehr.note.NoteFragment.prototype.getPriority = function() {
  return /** @type {!proto.ehr.note.FragmentPriority} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.ehr.note.FragmentPriority} value */
proto.ehr.note.NoteFragment.prototype.setPriority = function(value) {
  jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional FragmentTopic topic = 11;
 * @return {!proto.ehr.note.FragmentTopic}
 */
proto.ehr.note.NoteFragment.prototype.getTopic = function() {
  return /** @type {!proto.ehr.note.FragmentTopic} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.ehr.note.FragmentTopic} value */
proto.ehr.note.NoteFragment.prototype.setTopic = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional string markdown_content = 12;
 * @return {string}
 */
proto.ehr.note.NoteFragment.prototype.getMarkdownContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.ehr.note.NoteFragment.prototype.setMarkdownContent = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated string tags = 13;
 * @return {!Array<string>}
 */
proto.ehr.note.NoteFragment.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/** @param {!Array<string>} value */
proto.ehr.note.NoteFragment.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.ehr.note.NoteFragment.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


proto.ehr.note.NoteFragment.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


