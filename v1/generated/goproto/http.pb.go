// Code generated by protoc-gen-go. DO NOT EDIT.
// source: http.proto

package ehrpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Sticking to only HTTP status codes that can be mapped to a gRPC code.
type StatusCodes int32

const (
	StatusCodes_OK                    StatusCodes = 0
	StatusCodes_NOT_MODIFIED          StatusCodes = 1
	StatusCodes_NOT_AUTHORIZED        StatusCodes = 3
	StatusCodes_NOT_FOUND             StatusCodes = 4
	StatusCodes_CONFLICT              StatusCodes = 5
	StatusCodes_INTERNAL_SERVER_ERROR StatusCodes = 6
	StatusCodes_SERVICE_UNAVAILABLE   StatusCodes = 7
)

var StatusCodes_name = map[int32]string{
	0: "OK",
	1: "NOT_MODIFIED",
	3: "NOT_AUTHORIZED",
	4: "NOT_FOUND",
	5: "CONFLICT",
	6: "INTERNAL_SERVER_ERROR",
	7: "SERVICE_UNAVAILABLE",
}
var StatusCodes_value = map[string]int32{
	"OK":                    0,
	"NOT_MODIFIED":          1,
	"NOT_AUTHORIZED":        3,
	"NOT_FOUND":             4,
	"CONFLICT":              5,
	"INTERNAL_SERVER_ERROR": 6,
	"SERVICE_UNAVAILABLE":   7,
}

func (x StatusCodes) String() string {
	return proto.EnumName(StatusCodes_name, int32(x))
}
func (StatusCodes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_http_66b05b555a3050ee, []int{0}
}

func init() {
	proto.RegisterEnum("ehr.http.StatusCodes", StatusCodes_name, StatusCodes_value)
}

func init() { proto.RegisterFile("http.proto", fileDescriptor_http_66b05b555a3050ee) }

var fileDescriptor_http_66b05b555a3050ee = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x1c, 0xce, 0x41, 0x4e, 0x84, 0x30,
	0x14, 0x80, 0x61, 0x47, 0x1d, 0x66, 0x7c, 0xa2, 0x79, 0x79, 0xc6, 0x18, 0xaf, 0xe0, 0x82, 0x8d,
	0x27, 0x28, 0xed, 0x23, 0x36, 0xd6, 0x36, 0x29, 0x85, 0x05, 0x9b, 0x46, 0x22, 0x09, 0x3b, 0x08,
	0xd4, 0x5b, 0x78, 0x68, 0xd3, 0x59, 0xfe, 0xdf, 0xea, 0x07, 0x98, 0x53, 0x5a, 0xab, 0x75, 0x5b,
	0xd2, 0x42, 0xe7, 0x69, 0xde, 0xaa, 0xdc, 0x6f, 0x7f, 0x07, 0xb8, 0x6f, 0xd3, 0x77, 0xfa, 0xdd,
	0xe5, 0xf2, 0x33, 0xed, 0x54, 0xc0, 0xb5, 0xfb, 0xc4, 0x2b, 0x42, 0x28, 0xad, 0x0b, 0xf1, 0xcb,
	0x29, 0xdd, 0x68, 0x56, 0x78, 0x20, 0x82, 0xc7, 0x2c, 0xa2, 0x0b, 0x1f, 0xce, 0xeb, 0x81, 0x15,
	0xde, 0xd0, 0x03, 0xdc, 0x65, 0x6b, 0x5c, 0x67, 0x15, 0xde, 0x52, 0x09, 0x67, 0xe9, 0x6c, 0x63,
	0xb4, 0x0c, 0x78, 0xa4, 0x57, 0x78, 0xd6, 0x36, 0xb0, 0xb7, 0xc2, 0xc4, 0x96, 0x7d, 0xcf, 0x3e,
	0xb2, 0xf7, 0xce, 0x63, 0x41, 0x2f, 0xf0, 0x94, 0x45, 0x4b, 0x8e, 0x9d, 0x15, 0xbd, 0xd0, 0x46,
	0xd4, 0x86, 0xf1, 0x54, 0x9f, 0x86, 0xe3, 0x34, 0x6f, 0xeb, 0x38, 0x16, 0x97, 0xd1, 0xf7, 0xff,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0xad, 0x67, 0x80, 0xb6, 0x00, 0x00, 0x00,
}
