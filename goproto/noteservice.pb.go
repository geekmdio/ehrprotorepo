// Code generated by protoc-gen-go. DO NOT EDIT.
// source: noteservice.proto

package ehrpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NoteServiceResponseStatus struct {
	HttpCode             StatusCodes `protobuf:"varint,1,opt,name=http_code,json=httpCode,proto3,enum=ehr.http.StatusCodes" json:"http_code,omitempty"`
	Message              string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NoteServiceResponseStatus) Reset()         { *m = NoteServiceResponseStatus{} }
func (m *NoteServiceResponseStatus) String() string { return proto.CompactTextString(m) }
func (*NoteServiceResponseStatus) ProtoMessage()    {}
func (*NoteServiceResponseStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{0}
}
func (m *NoteServiceResponseStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoteServiceResponseStatus.Unmarshal(m, b)
}
func (m *NoteServiceResponseStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoteServiceResponseStatus.Marshal(b, m, deterministic)
}
func (dst *NoteServiceResponseStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoteServiceResponseStatus.Merge(dst, src)
}
func (m *NoteServiceResponseStatus) XXX_Size() int {
	return xxx_messageInfo_NoteServiceResponseStatus.Size(m)
}
func (m *NoteServiceResponseStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NoteServiceResponseStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NoteServiceResponseStatus proto.InternalMessageInfo

func (m *NoteServiceResponseStatus) GetHttpCode() StatusCodes {
	if m != nil {
		return m.HttpCode
	}
	return StatusCodes_OK
}

func (m *NoteServiceResponseStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateNoteRequest struct {
	Note                 *Note    `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNoteRequest) Reset()         { *m = CreateNoteRequest{} }
func (m *CreateNoteRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNoteRequest) ProtoMessage()    {}
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{1}
}
func (m *CreateNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNoteRequest.Unmarshal(m, b)
}
func (m *CreateNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNoteRequest.Marshal(b, m, deterministic)
}
func (dst *CreateNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNoteRequest.Merge(dst, src)
}
func (m *CreateNoteRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNoteRequest.Size(m)
}
func (m *CreateNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNoteRequest proto.InternalMessageInfo

func (m *CreateNoteRequest) GetNote() *Note {
	if m != nil {
		return m.Note
	}
	return nil
}

type CreateNoteResponse struct {
	Status               *NoteServiceResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Note                 *Note                      `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CreateNoteResponse) Reset()         { *m = CreateNoteResponse{} }
func (m *CreateNoteResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNoteResponse) ProtoMessage()    {}
func (*CreateNoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{2}
}
func (m *CreateNoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNoteResponse.Unmarshal(m, b)
}
func (m *CreateNoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNoteResponse.Marshal(b, m, deterministic)
}
func (dst *CreateNoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNoteResponse.Merge(dst, src)
}
func (m *CreateNoteResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNoteResponse.Size(m)
}
func (m *CreateNoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNoteResponse proto.InternalMessageInfo

func (m *CreateNoteResponse) GetStatus() *NoteServiceResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateNoteResponse) GetNote() *Note {
	if m != nil {
		return m.Note
	}
	return nil
}

type DeleteNoteRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNoteRequest) Reset()         { *m = DeleteNoteRequest{} }
func (m *DeleteNoteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNoteRequest) ProtoMessage()    {}
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{3}
}
func (m *DeleteNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNoteRequest.Unmarshal(m, b)
}
func (m *DeleteNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNoteRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNoteRequest.Merge(dst, src)
}
func (m *DeleteNoteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNoteRequest.Size(m)
}
func (m *DeleteNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNoteRequest proto.InternalMessageInfo

func (m *DeleteNoteRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteNoteResponse struct {
	Status               *NoteServiceResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DeleteNoteResponse) Reset()         { *m = DeleteNoteResponse{} }
func (m *DeleteNoteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNoteResponse) ProtoMessage()    {}
func (*DeleteNoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{4}
}
func (m *DeleteNoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNoteResponse.Unmarshal(m, b)
}
func (m *DeleteNoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNoteResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteNoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNoteResponse.Merge(dst, src)
}
func (m *DeleteNoteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNoteResponse.Size(m)
}
func (m *DeleteNoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNoteResponse proto.InternalMessageInfo

func (m *DeleteNoteResponse) GetStatus() *NoteServiceResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type RetrieveNoteRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetrieveNoteRequest) Reset()         { *m = RetrieveNoteRequest{} }
func (m *RetrieveNoteRequest) String() string { return proto.CompactTextString(m) }
func (*RetrieveNoteRequest) ProtoMessage()    {}
func (*RetrieveNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{5}
}
func (m *RetrieveNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveNoteRequest.Unmarshal(m, b)
}
func (m *RetrieveNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveNoteRequest.Marshal(b, m, deterministic)
}
func (dst *RetrieveNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveNoteRequest.Merge(dst, src)
}
func (m *RetrieveNoteRequest) XXX_Size() int {
	return xxx_messageInfo_RetrieveNoteRequest.Size(m)
}
func (m *RetrieveNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveNoteRequest proto.InternalMessageInfo

func (m *RetrieveNoteRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RetrieveNoteResponse struct {
	Status               *NoteServiceResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Note                 *Note                      `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RetrieveNoteResponse) Reset()         { *m = RetrieveNoteResponse{} }
func (m *RetrieveNoteResponse) String() string { return proto.CompactTextString(m) }
func (*RetrieveNoteResponse) ProtoMessage()    {}
func (*RetrieveNoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{6}
}
func (m *RetrieveNoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveNoteResponse.Unmarshal(m, b)
}
func (m *RetrieveNoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveNoteResponse.Marshal(b, m, deterministic)
}
func (dst *RetrieveNoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveNoteResponse.Merge(dst, src)
}
func (m *RetrieveNoteResponse) XXX_Size() int {
	return xxx_messageInfo_RetrieveNoteResponse.Size(m)
}
func (m *RetrieveNoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveNoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveNoteResponse proto.InternalMessageInfo

func (m *RetrieveNoteResponse) GetStatus() *NoteServiceResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RetrieveNoteResponse) GetNote() *Note {
	if m != nil {
		return m.Note
	}
	return nil
}

type FindNoteRequest struct {
	SearchTerms          string   `protobuf:"bytes,1,opt,name=search_terms,json=searchTerms,proto3" json:"search_terms,omitempty"`
	AuthorGuid           string   `protobuf:"bytes,2,opt,name=author_guid,json=authorGuid,proto3" json:"author_guid,omitempty"`
	PatientGuid          string   `protobuf:"bytes,3,opt,name=patient_guid,json=patientGuid,proto3" json:"patient_guid,omitempty"`
	VisitGuid            string   `protobuf:"bytes,4,opt,name=visit_guid,json=visitGuid,proto3" json:"visit_guid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNoteRequest) Reset()         { *m = FindNoteRequest{} }
func (m *FindNoteRequest) String() string { return proto.CompactTextString(m) }
func (*FindNoteRequest) ProtoMessage()    {}
func (*FindNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{7}
}
func (m *FindNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNoteRequest.Unmarshal(m, b)
}
func (m *FindNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNoteRequest.Marshal(b, m, deterministic)
}
func (dst *FindNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNoteRequest.Merge(dst, src)
}
func (m *FindNoteRequest) XXX_Size() int {
	return xxx_messageInfo_FindNoteRequest.Size(m)
}
func (m *FindNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindNoteRequest proto.InternalMessageInfo

func (m *FindNoteRequest) GetSearchTerms() string {
	if m != nil {
		return m.SearchTerms
	}
	return ""
}

func (m *FindNoteRequest) GetAuthorGuid() string {
	if m != nil {
		return m.AuthorGuid
	}
	return ""
}

func (m *FindNoteRequest) GetPatientGuid() string {
	if m != nil {
		return m.PatientGuid
	}
	return ""
}

func (m *FindNoteRequest) GetVisitGuid() string {
	if m != nil {
		return m.VisitGuid
	}
	return ""
}

type FindNoteResponse struct {
	Status               *NoteServiceResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Note                 []*Note                    `protobuf:"bytes,2,rep,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *FindNoteResponse) Reset()         { *m = FindNoteResponse{} }
func (m *FindNoteResponse) String() string { return proto.CompactTextString(m) }
func (*FindNoteResponse) ProtoMessage()    {}
func (*FindNoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{8}
}
func (m *FindNoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNoteResponse.Unmarshal(m, b)
}
func (m *FindNoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNoteResponse.Marshal(b, m, deterministic)
}
func (dst *FindNoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNoteResponse.Merge(dst, src)
}
func (m *FindNoteResponse) XXX_Size() int {
	return xxx_messageInfo_FindNoteResponse.Size(m)
}
func (m *FindNoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindNoteResponse proto.InternalMessageInfo

func (m *FindNoteResponse) GetStatus() *NoteServiceResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *FindNoteResponse) GetNote() []*Note {
	if m != nil {
		return m.Note
	}
	return nil
}

type UpdateNoteRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Note                 *Note    `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNoteRequest) Reset()         { *m = UpdateNoteRequest{} }
func (m *UpdateNoteRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNoteRequest) ProtoMessage()    {}
func (*UpdateNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{9}
}
func (m *UpdateNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNoteRequest.Unmarshal(m, b)
}
func (m *UpdateNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNoteRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNoteRequest.Merge(dst, src)
}
func (m *UpdateNoteRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNoteRequest.Size(m)
}
func (m *UpdateNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNoteRequest proto.InternalMessageInfo

func (m *UpdateNoteRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateNoteRequest) GetNote() *Note {
	if m != nil {
		return m.Note
	}
	return nil
}

type UpdateNoteResponse struct {
	Status               *NoteServiceResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UpdateNoteResponse) Reset()         { *m = UpdateNoteResponse{} }
func (m *UpdateNoteResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNoteResponse) ProtoMessage()    {}
func (*UpdateNoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noteservice_f41ec21297a7de16, []int{10}
}
func (m *UpdateNoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNoteResponse.Unmarshal(m, b)
}
func (m *UpdateNoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNoteResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateNoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNoteResponse.Merge(dst, src)
}
func (m *UpdateNoteResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNoteResponse.Size(m)
}
func (m *UpdateNoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNoteResponse proto.InternalMessageInfo

func (m *UpdateNoteResponse) GetStatus() *NoteServiceResponseStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*NoteServiceResponseStatus)(nil), "ehr.noteservice.NoteServiceResponseStatus")
	proto.RegisterType((*CreateNoteRequest)(nil), "ehr.noteservice.CreateNoteRequest")
	proto.RegisterType((*CreateNoteResponse)(nil), "ehr.noteservice.CreateNoteResponse")
	proto.RegisterType((*DeleteNoteRequest)(nil), "ehr.noteservice.DeleteNoteRequest")
	proto.RegisterType((*DeleteNoteResponse)(nil), "ehr.noteservice.DeleteNoteResponse")
	proto.RegisterType((*RetrieveNoteRequest)(nil), "ehr.noteservice.RetrieveNoteRequest")
	proto.RegisterType((*RetrieveNoteResponse)(nil), "ehr.noteservice.RetrieveNoteResponse")
	proto.RegisterType((*FindNoteRequest)(nil), "ehr.noteservice.FindNoteRequest")
	proto.RegisterType((*FindNoteResponse)(nil), "ehr.noteservice.FindNoteResponse")
	proto.RegisterType((*UpdateNoteRequest)(nil), "ehr.noteservice.UpdateNoteRequest")
	proto.RegisterType((*UpdateNoteResponse)(nil), "ehr.noteservice.UpdateNoteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NoteServiceClient is the client API for NoteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NoteServiceClient interface {
	NewNote(ctx context.Context, in *CreateNoteRequest, opts ...grpc.CallOption) (*CreateNoteResponse, error)
	DeleteNote(ctx context.Context, in *DeleteNoteRequest, opts ...grpc.CallOption) (*DeleteNoteResponse, error)
	RetrieveNote(ctx context.Context, in *RetrieveNoteRequest, opts ...grpc.CallOption) (*RetrieveNoteResponse, error)
	FindNote(ctx context.Context, in *FindNoteRequest, opts ...grpc.CallOption) (*FindNoteResponse, error)
	UpdateNote(ctx context.Context, in *UpdateNoteRequest, opts ...grpc.CallOption) (*UpdateNoteResponse, error)
}

type noteServiceClient struct {
	cc *grpc.ClientConn
}

func NewNoteServiceClient(cc *grpc.ClientConn) NoteServiceClient {
	return &noteServiceClient{cc}
}

func (c *noteServiceClient) NewNote(ctx context.Context, in *CreateNoteRequest, opts ...grpc.CallOption) (*CreateNoteResponse, error) {
	out := new(CreateNoteResponse)
	err := c.cc.Invoke(ctx, "/ehr.noteservice.NoteService/NewNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) DeleteNote(ctx context.Context, in *DeleteNoteRequest, opts ...grpc.CallOption) (*DeleteNoteResponse, error) {
	out := new(DeleteNoteResponse)
	err := c.cc.Invoke(ctx, "/ehr.noteservice.NoteService/DeleteNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) RetrieveNote(ctx context.Context, in *RetrieveNoteRequest, opts ...grpc.CallOption) (*RetrieveNoteResponse, error) {
	out := new(RetrieveNoteResponse)
	err := c.cc.Invoke(ctx, "/ehr.noteservice.NoteService/RetrieveNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) FindNote(ctx context.Context, in *FindNoteRequest, opts ...grpc.CallOption) (*FindNoteResponse, error) {
	out := new(FindNoteResponse)
	err := c.cc.Invoke(ctx, "/ehr.noteservice.NoteService/FindNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) UpdateNote(ctx context.Context, in *UpdateNoteRequest, opts ...grpc.CallOption) (*UpdateNoteResponse, error) {
	out := new(UpdateNoteResponse)
	err := c.cc.Invoke(ctx, "/ehr.noteservice.NoteService/UpdateNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NoteServiceServer is the server API for NoteService service.
type NoteServiceServer interface {
	NewNote(context.Context, *CreateNoteRequest) (*CreateNoteResponse, error)
	DeleteNote(context.Context, *DeleteNoteRequest) (*DeleteNoteResponse, error)
	RetrieveNote(context.Context, *RetrieveNoteRequest) (*RetrieveNoteResponse, error)
	FindNote(context.Context, *FindNoteRequest) (*FindNoteResponse, error)
	UpdateNote(context.Context, *UpdateNoteRequest) (*UpdateNoteResponse, error)
}

func RegisterNoteServiceServer(s *grpc.Server, srv NoteServiceServer) {
	s.RegisterService(&_NoteService_serviceDesc, srv)
}

func _NoteService_NewNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoteServiceServer).NewNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ehr.noteservice.NoteService/NewNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoteServiceServer).NewNote(ctx, req.(*CreateNoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NoteService_DeleteNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoteServiceServer).DeleteNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ehr.noteservice.NoteService/DeleteNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoteServiceServer).DeleteNote(ctx, req.(*DeleteNoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NoteService_RetrieveNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveNoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoteServiceServer).RetrieveNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ehr.noteservice.NoteService/RetrieveNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoteServiceServer).RetrieveNote(ctx, req.(*RetrieveNoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NoteService_FindNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindNoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoteServiceServer).FindNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ehr.noteservice.NoteService/FindNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoteServiceServer).FindNote(ctx, req.(*FindNoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NoteService_UpdateNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoteServiceServer).UpdateNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ehr.noteservice.NoteService/UpdateNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoteServiceServer).UpdateNote(ctx, req.(*UpdateNoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NoteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ehr.noteservice.NoteService",
	HandlerType: (*NoteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewNote",
			Handler:    _NoteService_NewNote_Handler,
		},
		{
			MethodName: "DeleteNote",
			Handler:    _NoteService_DeleteNote_Handler,
		},
		{
			MethodName: "RetrieveNote",
			Handler:    _NoteService_RetrieveNote_Handler,
		},
		{
			MethodName: "FindNote",
			Handler:    _NoteService_FindNote_Handler,
		},
		{
			MethodName: "UpdateNote",
			Handler:    _NoteService_UpdateNote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "noteservice.proto",
}

func init() { proto.RegisterFile("noteservice.proto", fileDescriptor_noteservice_f41ec21297a7de16) }

var fileDescriptor_noteservice_f41ec21297a7de16 = []byte{
	// 485 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x4d, 0x6f, 0x13, 0x31,
	0x10, 0xcd, 0x47, 0xdb, 0x34, 0x93, 0x2a, 0x25, 0x06, 0xa4, 0xb0, 0x12, 0x22, 0x75, 0xa9, 0x54,
	0x71, 0xd8, 0x43, 0x38, 0x70, 0x6f, 0x11, 0xbd, 0x55, 0x62, 0x5b, 0x44, 0x85, 0x84, 0xa2, 0x6d,
	0x3c, 0xea, 0x5a, 0xa2, 0xeb, 0xc5, 0xf6, 0x06, 0x09, 0x21, 0xfe, 0x06, 0x3f, 0x89, 0xbf, 0x85,
	0x6c, 0x6f, 0x1a, 0xb7, 0xde, 0x2e, 0x1c, 0x42, 0x6f, 0xeb, 0xe7, 0x37, 0x6f, 0x9e, 0x27, 0x6f,
	0x02, 0xa3, 0x5c, 0x68, 0x54, 0x28, 0x17, 0x7c, 0x8e, 0x71, 0x21, 0x85, 0x16, 0x64, 0x17, 0x33,
	0x19, 0x7b, 0x70, 0x04, 0xe6, 0xe0, 0x2e, 0x23, 0xc8, 0xb4, 0x2e, 0xdc, 0x37, 0xe5, 0xf0, 0xec,
	0x54, 0x68, 0x3c, 0x73, 0xb4, 0x04, 0x55, 0x21, 0x72, 0x85, 0x67, 0x3a, 0xd5, 0xa5, 0x22, 0x53,
	0xe8, 0x1b, 0xea, 0x6c, 0x2e, 0x18, 0x8e, 0xdb, 0x93, 0xf6, 0xe1, 0x70, 0xfa, 0x34, 0x36, 0xca,
	0x56, 0xc0, 0x91, 0x8e, 0x05, 0x43, 0x95, 0x6c, 0x1b, 0xc4, 0x7c, 0x92, 0x31, 0xf4, 0xae, 0x51,
	0xa9, 0xf4, 0x0a, 0xc7, 0x9d, 0x49, 0xfb, 0xb0, 0x9f, 0x2c, 0x8f, 0xf4, 0x0d, 0x8c, 0x8e, 0x25,
	0xa6, 0x1a, 0x4d, 0xc3, 0x04, 0xbf, 0x96, 0xa8, 0x34, 0xa1, 0xb0, 0x61, 0x9c, 0x59, 0xf5, 0xc1,
	0x74, 0x18, 0x2f, 0x7d, 0xc7, 0x96, 0x64, 0xef, 0xe8, 0x0f, 0x20, 0x7e, 0xa1, 0xb3, 0x48, 0x8e,
	0x60, 0x4b, 0x59, 0x07, 0x55, 0xed, 0xab, 0xf8, 0xce, 0x9b, 0xe3, 0x7b, 0x1f, 0x96, 0x54, 0x95,
	0x37, 0xdd, 0x3b, 0x0d, 0xdd, 0xf7, 0x61, 0xf4, 0x16, 0xbf, 0xe0, 0x6d, 0xdb, 0x43, 0xe8, 0x70,
	0x66, 0x1b, 0x6f, 0x26, 0x1d, 0xce, 0xe8, 0x05, 0x10, 0x9f, 0xb4, 0x3e, 0x8b, 0xf4, 0x00, 0x1e,
	0x27, 0xa8, 0x25, 0xc7, 0x45, 0xa3, 0x81, 0x9f, 0xf0, 0xe4, 0x36, 0xed, 0x81, 0xa7, 0xf4, 0xab,
	0x0d, 0xbb, 0xef, 0x78, 0xce, 0x7c, 0x8f, 0x7b, 0xb0, 0xa3, 0x30, 0x95, 0xf3, 0x6c, 0xa6, 0x51,
	0x5e, 0x3b, 0x07, 0xfd, 0x64, 0xe0, 0xb0, 0x73, 0x03, 0x91, 0x17, 0x30, 0x48, 0x4b, 0x9d, 0x09,
	0x39, 0xbb, 0x2a, 0x39, 0xab, 0x12, 0x03, 0x0e, 0x3a, 0x29, 0x39, 0x33, 0x1a, 0x45, 0xaa, 0x39,
	0xe6, 0xda, 0x31, 0xba, 0x4e, 0xa3, 0xc2, 0x2c, 0xe5, 0x39, 0xc0, 0x82, 0x2b, 0x5e, 0x11, 0x36,
	0x2c, 0xa1, 0x6f, 0x11, 0x73, 0x4d, 0xbf, 0xc3, 0xa3, 0x95, 0xb1, 0xff, 0x32, 0x95, 0xee, 0xbd,
	0x53, 0x39, 0x81, 0xd1, 0x87, 0x82, 0xa5, 0x8d, 0xd9, 0xf9, 0xa7, 0xf1, 0x5e, 0x00, 0xf1, 0x85,
	0xd6, 0xf7, 0x8c, 0xe9, 0xef, 0x2e, 0x0c, 0x3c, 0x16, 0x39, 0x87, 0xde, 0x29, 0x7e, 0x33, 0x08,
	0xa1, 0x81, 0x5c, 0xb0, 0xbf, 0xd1, 0x7e, 0x23, 0xc7, 0x75, 0xa4, 0x2d, 0xf2, 0x11, 0x60, 0xb5,
	0x1f, 0x35, 0xc2, 0xc1, 0x86, 0xd5, 0x08, 0x87, 0x0b, 0x46, 0x5b, 0xe4, 0x33, 0xec, 0xf8, 0xb9,
	0x27, 0x2f, 0x83, 0xb2, 0x9a, 0xed, 0x89, 0x0e, 0xfe, 0xc2, 0xba, 0x91, 0x7f, 0x0f, 0xdb, 0xcb,
	0xf0, 0x90, 0x49, 0x50, 0x74, 0x27, 0xf0, 0xd1, 0x5e, 0x03, 0xc3, 0x1f, 0xc5, 0xea, 0xa7, 0xac,
	0x19, 0x45, 0x10, 0x98, 0x9a, 0x51, 0x84, 0x59, 0xa0, 0xad, 0xa3, 0xde, 0xa7, 0x4d, 0xcc, 0x64,
	0x71, 0x79, 0xb9, 0x65, 0xff, 0xda, 0x5f, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xf5, 0xbf, 0x67,
	0x8a, 0x18, 0x06, 0x00, 0x00,
}
